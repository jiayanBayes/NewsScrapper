plugins {
    id 'java'
    id 'application' // Application plugin to run your Java application
}

repositories {
    mavenCentral()
}

dependencies {
    // Jackson dependencies for JSON handling
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.18.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.18.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'

    // Jsoup dependency for HTML parsing
    implementation 'org.jsoup:jsoup:1.18.3'

    // Selenium dependency for browser automation
    implementation 'org.seleniumhq.selenium:selenium-java:4.28.1'

    // Test framework dependency
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    // CouchDB dependency (Ektorp library for CouchDB interactions)
    implementation 'org.ektorp:org.ektorp:1.5.0'

    // Quartz Scheduler library for scheduling jobs
    implementation 'org.quartz-scheduler:quartz:2.3.2'
}

application {
    // Specify the fully qualified name of your main class
    mainClass = 'scraping.SchedulerApp'
}

test {
    useJUnitPlatform() // For running JUnit 5 tests
}

// Task to check if CouchDB is running
tasks.register('checkCouchDB') {
    doLast {
        def couchdbUrl = 'http://127.0.0.1:5984/'
        try {
            def connection = new URL(couchdbUrl).openConnection()
            connection.setRequestMethod('GET')
            connection.connect()
            if (connection.getResponseCode() == 200) {
                println("CouchDB is running at ${couchdbUrl}")
            } else {
                println("CouchDB responded with status code: ${connection.getResponseCode()}")
                throw new GradleException("CouchDB is not running. Please start CouchDB before running the application.")
            }
        } catch (Exception e) {
            println("Failed to connect to CouchDB: ${e.message}")
            throw new GradleException("CouchDB is not running. Please start CouchDB before running the application.")
        }
    }
}

// Make the 'run' task depend on 'checkCouchDB'
tasks.named('run') {
    dependsOn 'checkCouchDB'
}
